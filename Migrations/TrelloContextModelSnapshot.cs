// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trello_back.Models;

#nullable disable

namespace Trello_back.Migrations
{
    [DbContext(typeof(TrelloContext))]
    partial class TrelloContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trello_back.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<int?>("IdList")
                        .HasColumnType("INT")
                        .HasColumnName("idList");

                    b.Property<string>("Title")
                        .HasColumnType("varchar (255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("IdList");

                    b.ToTable("Card", (string)null);
                });

            modelBuilder.Entity("Trello_back.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("createdAt");

                    b.Property<int?>("IdCard")
                        .HasColumnType("INT")
                        .HasColumnName("idCard");

                    b.Property<string>("Username")
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("IdCard");

                    b.HasIndex("Username");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Trello_back.Models.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdProject")
                        .HasColumnType("INT")
                        .HasColumnName("idProject");

                    b.Property<string>("Name")
                        .HasColumnType("varchar (50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("IdProject");

                    b.ToTable("List", (string)null);
                });

            modelBuilder.Entity("Trello_back.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("varchar (50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("Trello_back.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar (255)")
                        .HasColumnName("username");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Username");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Trello_back.Models.Card", b =>
                {
                    b.HasOne("Trello_back.Models.List", "IdListNavigation")
                        .WithMany("Cards")
                        .HasForeignKey("IdList")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdListNavigation");
                });

            modelBuilder.Entity("Trello_back.Models.Comment", b =>
                {
                    b.HasOne("Trello_back.Models.Card", "IdCardNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdCard")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Trello_back.Models.User", "UsernameNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdCardNavigation");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("Trello_back.Models.List", b =>
                {
                    b.HasOne("Trello_back.Models.Project", "IdProjectNavigation")
                        .WithMany("Lists")
                        .HasForeignKey("IdProject")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdProjectNavigation");
                });

            modelBuilder.Entity("Trello_back.Models.Card", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Trello_back.Models.List", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Trello_back.Models.Project", b =>
                {
                    b.Navigation("Lists");
                });

            modelBuilder.Entity("Trello_back.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
